/*============================================================================
  #Breakpoint and Grid Variables
==============================================================================*/
$viewportIncrement: 1px;

$small: 480px;
$medium: 890px;
$large: 891px;

$postSmall: $small + $viewportIncrement;
$preMedium: $medium - $viewportIncrement;
$preLarge: $large - $viewportIncrement;

/*================ The following are dependencies of csswizardry grid ================*/
$breakpoints: (
  'small' '(max-width: #{$small})',
  'medium' '(min-width: #{$postSmall}) and (max-width: #{$medium})',
  'medium-down' '(max-width: #{$medium})',
  'large' '(min-width: #{$large})'
);
$breakpoint-has-widths: ('small', 'medium', 'medium-down', 'large');
$breakpoint-has-push:  ('medium', 'medium-down', 'large');
$breakpoint-has-pull:  ('medium', 'medium-down', 'large');

/*============================================================================
  Dependency-free breakpoint mixin
// http://blog.grayghostvisuals.com/sass/sass-media-query-mixin/
==============================================================================*/
$min: min-width;
$max: max-width;
@mixin at-query ($constraint, $viewport1, $viewport2:null) {
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}

/*added icons*/
@font-face {
  font-family: "icons_new";
  src: url('{{ 'entypo.eot' | asset_url }}');
  src: url('{{ 'entypo.eot' | asset_url }}#iefix') format("embedded-opentype"),
       url('{{ 'entypo.woff' | asset_url }}') format("woff"),
       url('{{ 'entypo.ttf' | asset_url }}') format("truetype"),
       url('{{ 'entypo.svg' | asset_url }}#timber-icons') format("svg");
  font-weight: normal;
  font-style: normal;
}
.icons {
  &:before {
    font-family:icons_new;
  }
}
.icon-arrow-bold-left:before { content: "\e611"; }


/*main css*/
.site-header {
  padding:0;
  .wrapper {
    .grid--full {
      position:relative;
      .large--text-right {
      padding:8px 0;
      }
    }
  }
}

#top {
  background-color:{{ settings.color_header_cart_search }};
  color:{{ settings.color_secondary }};
  font-size:12px;
  .wrapper {
    padding-top:0.5em;
    padding-bottom:0.5em;
  }
  a {
    color:{{ settings.color_secondary }};
    display:inline-block;
    padding:1em;
    font-size:12px;
    &:hover {
      i {
        text-decoration:underline;
      }
    }
  }
}


.icon-hamburger, .icon-cart {
  color:{{ settings.color_secondary }};
}

.header-cart-btn:hover, .header-cart-btn:focus {
    background-color: lighten({{ settings.color_header_cart_search }}, 2%);
}

.legal-links {
  font-weight:bold;
}

.site-header .search-bar input[type="text"], .site-header .search-bar input[type="search"], .nav-bar .search-bar input[type="text"], .nav-bar .search-bar input[type="search"] {
  background-color:{{ settings.color_body_bg }};
  color:#666666;
}

.site-header .search-bar input[type="search"] {
  &:hover, &:focus {
    background-color: {{ settings.color_body_bg }};
  }
}

.site-header .search-bar input[type="submit"], .site-header .search-bar .search-bar--submit {
  color:#666666;
}

.site-header input::-webkit-input-placeholder {
  color:#CCCCCC;
}

.site-header input::-moz-placeholder {
  color:#CCCCCC;
}

/*large up*/
@include at-query ($min, $large) {
  #logo {
    position:absolute;
    z-index:10;
    top:0;
    left:0;
    background:transparent url({{ 'logo-bg.png' | asset_url }}) left bottom no-repeat;
    padding:19px 19px 22px 19px;
    img {
      width:93px;
      height:auto;
    }
    .header-logo {
      margin:0;
    }
  }
  .site-nav {
    margin-left:135px;
  }
}

/*medium down*/
@include at-query ($max, $medium) {
  .site-header {
    background-color:transparent;
  }
  #top {
    .wrapper {
      padding-left:0;
    }
  }
  #footer {
    text-align:center;
  }
}

